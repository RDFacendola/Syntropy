
// ################################################################################

// @author Raffaele D. Facendola - April 2023

// ################################################################################

module syntropy.hash;

// ################################################################################

// ================================================================================
// HASH
// ================================================================================

sy::Int sy::Hash(const ByteSpan& span)
{
    // Uses FNV1a 64-bit with recommended constants by Landon Curt Noll - http://www.isthe.com/chongo/

    auto hash = sy::Int(0xcbf29ce484222325);

    for (auto byte : span)
    {
        hash ^= ToInt(byte);

        hash = (hash << 0) + (hash << 1) + (hash << 4) + (hash << 5) + (hash << 7) + (hash << 8) + (hash << 40);
    }

    return hash;
}

// ################################################################################
